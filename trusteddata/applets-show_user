{"id":"show_user","content":"{\"html\":\"\",\"js\":\"let capitalizeFirstLetter \u003d function(string) {\\n    return string.charAt(0).toUpperCase() + string.slice(1);\\n}\\n\\nlet A \u003d new UApi();\\nlet inputUserId \u003d A.getInput()[0]\\nlet curUserId \u003d getCurrentUser()\\ninputUserId \u003d inputUserId ? inputUserId : curUserId\\n\\nif(!inputUserId) {\\n  A.makeH3(\u0027No userid is input. Paste `!userid` in search box to input userid\u0027)\\n}\\n\\nconsole.log(inputUserId, curUserId)\\n\\nlet h \u003d document.createElement(\u0027h3\u0027)\\nh.innerText \u003d inputUserId\\n\\nlet d \u003d document.createElement(\u0027table\u0027)\\n\\nlet proms \u003d [];\\nif(inputUserId) proms.push(get(`/auth/user/${inputUserId}`))\\nif(curUserId) proms.push(inputUserId \u003d\u003d curUserId ? proms[0] : get(`/auth/user/${curUserId}`))\\n\\nPromise.all(proms).then(function(resps) {\\n    \\n    console.log(resps)\\n\\n    let user, curUser;\\n\\n    user \u003d JSON.parse(resps[0].response)\\n    if(resps.length \u003e 1) {\\n        curUser \u003d JSON.parse(resps[1].response)\\n    } else {\\n        curUser \u003d {\\n            basic: {\\n                userName: \u0027anomymous\u0027,\\n                roles: \u0027\u0027,\\n            }\\n        }\\n    }\\n\\n    let ALL_ROLES \u003d [\\\"CREATE\\\", \\\"EDIT\\\", \\\"UPVOTE\\\", \\\"DOWNVOTE\\\", \\\"COMMENT\\\", \\\"DELETE\\\", \\\"ADMIN\\\"]\\n\\n    let canGiveThisPermission \u003d function(u1, u2, perm) {\\n        if(!u1 || !u2) return false\\n        let rs1 \u003d u1.basic.roles;\\n        if(!rs1.includes(perm)) return false;\\n        let r1 \u003d rs1.split(\\\",\\\").sort();\\n\\n        let rs2 \u003d u2.basic.roles;\\n        let r2 \u003d rs2.split(\\\",\\\");\\n\\n        for(let i \u003d 0; i \u003c r2.length; i++) {\\n            if(!rs1.includes(r2[i])) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    let getEditIcon \u003d function() {\\n        return `\u003cspan style\u003d\u0027border-left: solid 1px gray; float: right; cursor: pointer; padding: 3px;\u0027\\n                    onclick\u003d\u0027this.previousElementSibling.removeAttribute(\\\"readonly\\\"); this.previousElementSibling.focus()\u0027\u003e\u0026#x1F589;\u003c/span\u003e`;\\n    }\\n\\n    let valueMarshallers \u003d {\\n        \u0027roles\u0027 : function(key, roles) {\\n            return ALL_ROLES\\n                    .map(R \u003d\u003e `\u003cinput type\u003d\\\"checkbox\\\" class\u003d\\\"rolecbox\\\" datakey\u003d\u0027${R}\u0027 ${roles.includes(R) ? \u0027checked\u0027 : \u0027\u0027} ${!canGiveThisPermission(curUser, user, R) ? \u0027disabled\u0027 : \u0027\u0027}\u003e${R}\u003c/input\u003e`)\\n                    .join(\u0027\u003cbr/\u003e\u0027)\\n        },\\n        \u0027*\u0027 : function(key, v, editable, typ) {\\n            return `\\n                \u003cdiv style\u003d\\\"border: solid 1px gray; border-radius: 3px\\\"\u003e\\n                        \u003cinput type\u003d\u0027${typ ? typ : \u0027text\u0027}\u0027 style\u003d\u0027border: none; padding: 5px; border-width: 0px; width: 310\u0027 datakey\u003d\u0027${key}\u0027 value\u003d\\\"${v}\\\" readonly\u003e\u003c/input\u003e\\n                        ${editable ? getEditIcon() : \u0027\u0027}\\n                \u003c/div\u003e`\\n        },\\n        \u0027verified\u0027: function(key, v) { return `\u003cinput type\u003d\\\"checkbox\\\" ${v?\u0027checked\u0027:\u0027\u0027} style\u003d\\\"pointer-events: none\\\" readonly/\u003e`},\\n        \u0027password\u0027 : function(key, v) { return valueMarshallers[\u0027*\u0027](\u0027password\u0027, \u0027\u0027, true, \u0027password\u0027) }\\n    }\\n\\n    let showToUserOnly \u003d [\u0027password\u0027];\\n    let othersEditable \u003d [\u0027roles\u0027];\\n    let readonly \u003d [\u0027userName\u0027];\\n\\n    let html \u003d \u0027\u0027;\\n\\n    html \u003d `\u003ctr\u003e\u003ctd style\u003d\\\"text-align: center; padding-right: 10px; width: 100px\\\"\u003e\u003ch3\u003eBasic Info\u003c/h3\u003e\u003c/td\u003e\u003c/tr\u003e`\\n    Object.keys(user.basic).forEach(function(k) {\\n        if((showToUserOnly.includes(k) \u0026\u0026 inputUserId !\u003d curUserId \u0026\u0026 !curUser.basic.roles.includes(\u0027ADMIN\u0027))) {\\n            return;\\n        }\\n        let marshaller \u003d valueMarshallers[k] ? valueMarshallers[k] : valueMarshallers[\u0027*\u0027]\\n        html +\u003d `\\n            \u003ctr\u003e\\n                \u003ctd style\u003d\\\"text-align: right; padding-right: 10px\\\" data\u003d\u0027basic\u0027 key\u003d\u0027${k}\u0027\u003e${capitalizeFirstLetter(k)}\u003c/td\u003e\\n                \u003ctd\u003e${marshaller(k, user.basic[k], (!readonly.includes(k) \u0026\u0026 (curUserId \u003d\u003d inputUserId || curUser.basic.roles.includes(\u0027ADMIN\u0027) || othersEditable.includes(k))))}\u003c/td\u003e\\n            \u003c/tr\u003e`\\n    })\\n    html +\u003d `\u003ctr\u003e\u003ctd/\u003e\u003ctd\u003e\u003cbutton class\u003d\u0027saveuserinfo-btn-stupid\u0027\u003eSave\u003c/button\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd style\u003d\\\"text-align: center; padding-right: 10px\\\"\u003e\u003ch3\u003ePosts\u003c/h3\u003e\u003c/td\u003e\u003c/tr\u003e`\\n    Object.keys(user.extra.postCount).forEach(function(k) {\\n        html +\u003d `\\n        \u003ctr\u003e\\n        \u003ctd style\u003d\\\"width: 30px; text-align: right\\\"\u003e\u003cb\u003e${user.extra.postCount[k]}\u003c/b\u003e\u003c/td\u003e\\n        \u003ctd style\u003d\\\"padding-left: 10px\\\"\u003e\\n            \u003ca href\u003d\\\"?q\u003d${ encodeURIComponent(\\\"~\\\" + user.basic.userName + \\\" %\\\" + k) }\\\"\u003e\\n                ${k}\\n            \u003c/a\u003e\\n        \u003c/td\u003e\\n        \u003c/tr\u003e\\n        `\\n    });\\n    html +\u003d `\u003ctr\u003e\u003ctd style\u003d\\\"text-align: center; padding-right: 10px\\\"\u003e\u003ch3\u003eGroups\u003c/h3\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd colspan\u003d\\\"2\\\"\u003e\u003cdiv style\u003d\u0027margin-left: 50px; width: 100%; display: block;\u0027\u003e`\\n    user.extra.groups.forEach(grp \u003d\u003e {\\n        html +\u003d `\u003cspan style\u003d\u0027background-color: skyblue; padding: 2px 8px; cursor: pointer; border-radius: 5px; display: inline-block; margin-right: 2px\u0027 onclick\u003d\u0027inodes.triggerSearch(\\\"#inodesapp #viewgroup !${grp}\\\")\u0027\u003e${grp}\u003c/span\u003e`\\n    })\\n    html +\u003d `\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e`\\n\\n    d.innerHTML \u003d html;\\n    d.querySelector(\u0027button.saveuserinfo-btn-stupid\u0027).addEventListener(\u0027click\u0027, () \u003d\u003e {\\n\\n        let user \u003d {};\\n\\n        let txts \u003d d.querySelectorAll(\u0027input[type\u003dtext], input[type\u003dpassword]\u0027);\\n        for (let i \u003d 0; i \u003c txts.length; i++) {\\n            let k \u003d txts[i].getAttribute(\u0027datakey\u0027)\\n            if(k) {\\n                if(k !\u003d \u0027password\u0027 || txts[i].value !\u003d \u0027\u0027) {\\n                    user[k] \u003d txts[i].value\\n                }\\n            }\\n        }\\n\\n        let rols \u003d d.querySelectorAll(\u0027input[type\u003dcheckbox].rolecbox\u0027)\\n        console.log(rols)\\n        let role_list \u003d []\\n        for (let i \u003d 0; i \u003c rols.length; i++) {\\n            if(rols[i].checked)\\n                role_list.push(rols[i].getAttribute(\u0027datakey\u0027))\\n        }\\n        user[\u0027roles\u0027] \u003d role_list.join(\u0027,\u0027)\\n        console.log(user)\\n        post(\\n            \u0027/auth/user\u0027,\\n            user,\\n            {\u0027Content-Type\u0027: \u0027application/json\u0027}\\n        ).then( x \u003d\u003e {\\n            alert(\u0027Done\u0027);\\n            inodes.refresh();\\n        })\\n    })\\n})\\nlet pnode \u003d document.currentScript.parentNode;\\npnode.appendChild(h);\\npnode.appendChild(d);\"}","type":"applets","tags":["user","inodesapp"],"owner":"admin","postTime":1615107353236,"visibility":["u-admin","g-security"],"savedVisibility":["g-public"],"needsApproval":true}